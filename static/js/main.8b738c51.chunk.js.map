{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/about.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfor","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","defaultProps","about","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","NotFound","Test","title","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b738c51.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state, //spread operator\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n\r\n    case 'ADD_CONTACT':\r\n      //updating the state by adding the new contact\r\n      return {\r\n        ...state, //spread operator\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n      //updating the state by updating the new contact\r\n      return {\r\n        ...state, //to get initialse state\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//this acts as a global state\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: 1,\r\n      //   name: 'john Doe',\r\n      //   email: 'jdoe@gmail.com',\r\n      //   phone: '555-555-555'\r\n      // },\r\n      // {\r\n      //   id: 2,\r\n      //   name: 'Karen Doe',\r\n      //   email: 'karen@gmail.com',\r\n      //   phone: '555-556-556'\r\n      // },\r\n      // {\r\n      //   id: 3,\r\n      //   name: 'henry Doe',\r\n      //   email: 'henry@gmail.com',\r\n      //   phone: '333-115-555'\r\n      // }\r\n    ],\r\n    //calls the action in our reducer\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  //you can use axios or ftech to mke http request\r\n  async componentDidMount() {\r\n    //initailise our state micmicing the backend\r\n\r\n    //usin async\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({ contacts: res.data });\r\n    // axios.get('https://jsonplaceholder.typicode.com/users').then(res =>\r\n    //   this.setState({\r\n    //     contacts: res.data\r\n    //   })\r\n    // )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //passing the state so it can be consumed by any component that wants to use it\r\n\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n//export our consumer\r\n//we use the consumer within any compoenet we want to access the state from\r\nexport const Consumer = Context.Consumer;\r\n\r\n//so we can use <consumer></consumer>\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfor: true\r\n  };\r\n  //arrow function is auto binding\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfor: !this.state.showContactInfor });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    //create a prop called delete this halder\r\n    //this needs to be added to contacts stae property so it can be handled allowing us to change state from one component to another\r\n    //this.props.deleteClickHandler();\r\n    //we will use the consumer to activate the delete click\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  //use http delete request here\r\n  //   axios\r\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\r\n  // };\r\n\r\n  // dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  //our dispatch calls our reducer function\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    //const { contact } = this.props;\r\n    const { showContactInfor } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n              </h4>\r\n              <Link to={`contact/edit/${id}`}>\r\n                <i\r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'\r\n                  }}\r\n                />\r\n              </Link>\r\n\r\n              {showContactInfor ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  // to get rid of failed warning prop name\r\n  // name: PropTypes.string.isRequired,\r\n  // email: PropTypes.string.isRequired,\r\n  // phone: PropTypes.string.isRequired\r\n  contact: PropTypes.object.isRequired\r\n  //deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\n//this is where my state lives, the parent of Contact state\r\nclass Contacts extends Component {\r\n  render() {\r\n    //pulling contacts out of the state\r\n    //const { contacts } = this.state;\r\n    return (\r\n      //loop through each state in component\r\n      //we are passing the contact in as a property\r\n      //this is the consumer of our aplkcation level state in our provider\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb2\">\r\n                {' '}\r\n                <span className=\"text-danger\">Contact List</span>{' '}\r\n              </h1>\r\n\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  //destructuring\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    // <div>\r\n    //   <h1>{branding}</h1>\r\n    // </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//   color: 'green',\r\n//   fontSize: '50px'\r\n// };\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default function about() {\r\n  return (\r\n    //cannot use this in a functional component because it doesnt have a dynamic state\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {/* this is how you access parameters */}\r\n        {/* {props.match.params.id} About Contact Manager */}\r\n        About Contact Manager\r\n      </h1>\r\n      <p className=\"lead\"> Simple App to manage</p>\r\n\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","//rfc\r\nimport React from 'react';\r\n//impt\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  //destructuring\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n//validate ou prop types\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\n//if its not exported by default then dont put {}\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\n//import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    //prevents any default values from submiting to the form\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      //id: uuid(), //generates a unique id\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    //make http post request\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    //reset state clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    //redirect to contacts page\r\n    //the actual page is not being rephresed at all,\r\n    //SINGLE PAGE NAVIGATION\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  //what ever the value is in the form to be the state\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h2>Add Contact</h2>\r\n              </div>\r\n              <div className=\"card-body\" />\r\n\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter \r\n              Phone\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add Contact\"\r\n                  className=\"btn btn-dark btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page not found</h1>\r\n      <p>Page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    id: ''\r\n  };\r\n  //second most used lifecycle\r\n  componentDidMount() {\r\n    //making http calls to and api\r\n    //putting those data into state\r\n    //fetcthing data from a data into compoent state\r\n    //console.log('componentDidMount');\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          id: data.id\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   //this will run first before component did mount\r\n  //   console.log('componentWillMount');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   //changing its state //regular CRUD operations will be detected\r\n  //   console.log('component did update');\r\n  // }\r\n\r\n  // //UNSAFE it is being deprecated\r\n  // componentWillUpdate() {}\r\n\r\n  // //UNSAFE it is being deprecated\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   //when your component recievs new properties this will run, usally used with redux so you can map it as props\r\n  //   console.log('compoenet willrecieve props');\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, nextState) {\r\n  //   //must return a state or null\r\n  //   //cannot use setState ''Wierd\r\n  //   return {\r\n  //     test: 'something'\r\n  //   };\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log('getSnapshotBeforeUpdate');\r\n  // }\r\n\r\n  render() {\r\n    //pull out our data from state\r\n    const { title, id } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <h2>{title}</h2>\r\n        <p>{id}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n\r\n// Test uses getDerivedStateFromProps() but also contains the following legacy lifecycles:\r\n//   componentWillMount\r\n//   componentWillReceiveProps\r\n//   componentWillUpdate\r\n\r\n// The above lifecycles should be removed. Learn more about this warning here:\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: res.data //comes from our put request with the updated data\r\n    });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  //if this is not there you cannot chnage the text input\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  //what ever the value is in the form to be the state\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h2>Edit Contact</h2>\r\n              </div>\r\n              <div className=\"card-body\" />\r\n\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter \r\n              Phone\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                  error={errors.phone}\r\n                />\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Contact\"\r\n                  className=\"btn btn-dark btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\n// import { BroswerRouter as Router } from 'router';\nimport { Route, Switch } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n// import Contact from './components/Contact';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/about';\nimport AddContact from './components/contacts/AddContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      //wrap everything inside this render component\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                {/* <Route exact path=\"/about/:id\" component={About} /> */}\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n\n              {/* <AddContact />\n              <Contacts /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}